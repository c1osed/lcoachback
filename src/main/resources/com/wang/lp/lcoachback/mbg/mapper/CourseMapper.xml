<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wang.lp.lcoachback.mbg.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.wang.lp.lcoachback.mbg.model.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="course_title" jdbcType="VARCHAR" property="courseTitle" />
    <result column="course_evaluation" jdbcType="VARCHAR" property="courseEvaluation" />
    <result column="course_grading" jdbcType="VARCHAR" property="courseGrading" />
    <result column="course_notes" jdbcType="VARCHAR" property="courseNotes" />
    <result column="data" jdbcType="DATE" property="data" />
    <result column="festivals" jdbcType="VARCHAR" property="festivals" />
    <result column="course_type" jdbcType="VARCHAR" property="courseType" />
    <result column="is_connected" jdbcType="BIT" property="isConnected" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sid, tid, course_title, course_evaluation, course_grading, course_notes, data, 
    festivals, course_type, is_connected
  </sql>
  <select id="selectByExample" parameterType="com.wang.lp.lcoachback.mbg.model.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wang.lp.lcoachback.mbg.model.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wang.lp.lcoachback.mbg.model.Course">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course (sid, tid, course_title, 
      course_evaluation, course_grading, course_notes, 
      data, festivals, course_type, 
      is_connected)
    values (#{sid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{courseTitle,jdbcType=VARCHAR}, 
      #{courseEvaluation,jdbcType=VARCHAR}, #{courseGrading,jdbcType=VARCHAR}, #{courseNotes,jdbcType=VARCHAR}, 
      #{data,jdbcType=DATE}, #{festivals,jdbcType=VARCHAR}, #{courseType,jdbcType=VARCHAR}, 
      #{isConnected,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.wang.lp.lcoachback.mbg.model.Course">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        sid,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="courseTitle != null">
        course_title,
      </if>
      <if test="courseEvaluation != null">
        course_evaluation,
      </if>
      <if test="courseGrading != null">
        course_grading,
      </if>
      <if test="courseNotes != null">
        course_notes,
      </if>
      <if test="data != null">
        data,
      </if>
      <if test="festivals != null">
        festivals,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="isConnected != null">
        is_connected,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="courseTitle != null">
        #{courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="courseEvaluation != null">
        #{courseEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="courseGrading != null">
        #{courseGrading,jdbcType=VARCHAR},
      </if>
      <if test="courseNotes != null">
        #{courseNotes,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=DATE},
      </if>
      <if test="festivals != null">
        #{festivals,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="isConnected != null">
        #{isConnected,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wang.lp.lcoachback.mbg.model.CourseExample" resultType="java.lang.Integer">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.courseTitle != null">
        course_title = #{record.courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.courseEvaluation != null">
        course_evaluation = #{record.courseEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="record.courseGrading != null">
        course_grading = #{record.courseGrading,jdbcType=VARCHAR},
      </if>
      <if test="record.courseNotes != null">
        course_notes = #{record.courseNotes,jdbcType=VARCHAR},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=DATE},
      </if>
      <if test="record.festivals != null">
        festivals = #{record.festivals,jdbcType=VARCHAR},
      </if>
      <if test="record.courseType != null">
        course_type = #{record.courseType,jdbcType=VARCHAR},
      </if>
      <if test="record.isConnected != null">
        is_connected = #{record.isConnected,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set id = #{record.id,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      course_title = #{record.courseTitle,jdbcType=VARCHAR},
      course_evaluation = #{record.courseEvaluation,jdbcType=VARCHAR},
      course_grading = #{record.courseGrading,jdbcType=VARCHAR},
      course_notes = #{record.courseNotes,jdbcType=VARCHAR},
      data = #{record.data,jdbcType=DATE},
      festivals = #{record.festivals,jdbcType=VARCHAR},
      course_type = #{record.courseType,jdbcType=VARCHAR},
      is_connected = #{record.isConnected,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wang.lp.lcoachback.mbg.model.Course">
    update course
    <set>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="courseTitle != null">
        course_title = #{courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="courseEvaluation != null">
        course_evaluation = #{courseEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="courseGrading != null">
        course_grading = #{courseGrading,jdbcType=VARCHAR},
      </if>
      <if test="courseNotes != null">
        course_notes = #{courseNotes,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=DATE},
      </if>
      <if test="festivals != null">
        festivals = #{festivals,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="isConnected != null">
        is_connected = #{isConnected,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wang.lp.lcoachback.mbg.model.Course">
    update course
    set sid = #{sid,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      course_title = #{courseTitle,jdbcType=VARCHAR},
      course_evaluation = #{courseEvaluation,jdbcType=VARCHAR},
      course_grading = #{courseGrading,jdbcType=VARCHAR},
      course_notes = #{courseNotes,jdbcType=VARCHAR},
      data = #{data,jdbcType=DATE},
      festivals = #{festivals,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=VARCHAR},
      is_connected = #{isConnected,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>